#!/bin/bash
set -e

# Establish source dir for relative includes
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi

# Pre-suite (download and extract requested release)
# shellcheck source=../shared/entrypoint-pre disable=SC1091
. "$DIR/../shared/entrypoint-pre"

# Make sure required Anubis env vars are set
# shellcheck source=../shared/entrypoint-anubis-pre disable=SC1091
. "$DIR/../shared/entrypoint-anubis-pre"

# TODO make a PDK frontend/backdoor for this? like a wrapper in /opt/puppetlabs/pdk/private?
export PATH=$PATH:/opt/puppetlabs/pdk/private/ruby/2.5.8/bin
export GEM_PATH=/opt/puppetlabs/pdk/private/ruby/2.5.8/lib/ruby/gems/2.5.0:/opt/puppetlabs/pdk/share/cache/ruby/2.5.0:/opt/puppetlabs/pdk/private/puppet/ruby/2.5.0

# Run strings and emit output to json document
/opt/puppetlabs/pdk/private/puppet/ruby/2.5.0/bin/puppet strings generate --format json --out anubis_output.json
cat anubis_output.json

# Post results back to given API endpoint
# shellcheck source=../shared/entrypoint-anubis-post disable=SC1091
. "$DIR/../shared/entrypoint-anubis-post"

# shellcheck source=shared/entrypoint-post disable=SC1091
. "$DIR/../shared/entrypoint-post"

exit 0

