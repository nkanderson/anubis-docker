#!/bin/bash
set -e

# Establish source dir for relative includes
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi

# Pre-suite (download and extract requested release)
# shellcheck source=../shared/entrypoint-pre disable=SC1091
. "$DIR/../shared/entrypoint-pre"

# Make sure required Anubis env vars are set
# shellcheck source=../shared/entrypoint-anubis-pre disable=SC1091
. "$DIR/../shared/entrypoint-anubis-pre"

manifests=0
lines=0

if [ -d "manifests" ]; then
  for f in $(find manifests -type f -name "*.pp")
  do
    manifests=$((manifests+1))
    lines=$(($lines + $(wc -l < $f)))
  done
fi

eval $(pdk env)

# Run lint and emit output to json document
{
  puppet-lint --json manifests > lint_output.json
  exit_code=$?
} || {
  true
}
# Ensure file contains valid JSON if there are no manifests or there's no output
if [[ $manifests -eq 0 ]] || [[ ! -s lint_output.json ]]; then
  echo 'null' > lint_output.json
fi
ruby -e "require 'json'; puts ({ exit_code: $exit_code, manifests: $manifests, lines: $lines, output: JSON.parse(File.read('lint_output.json')) }).to_json" > anubis_output.json
cat anubis_output.json

# Post results back to given API endpoint
# shellcheck source=../shared/entrypoint-anubis-post disable=SC1091
. "$DIR/../shared/entrypoint-anubis-post"

# shellcheck source=shared/entrypoint-post disable=SC1091
. "$DIR/../shared/entrypoint-post"

exit 0

